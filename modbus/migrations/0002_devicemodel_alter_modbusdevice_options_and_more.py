# Generated by Django 4.2.24 on 2025-09-25 13:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('modbus', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100)),
                ('model_number', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='modbusdevice',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='modbusregister',
            options={'ordering': ['order', 'address']},
        ),
        migrations.AddField(
            model_name='modbusdevice',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='modbusdevice',
            name='location',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='modbusregister',
            name='category',
            field=models.CharField(choices=[('voltage', 'Voltage'), ('current', 'Current'), ('power', 'Power'), ('energy', 'Energy'), ('power_quality', 'Power Quality'), ('harmonics', 'Harmonics'), ('frequency', 'Frequency'), ('other', 'Other')], default='other', max_length=20),
        ),
        migrations.AddField(
            model_name='modbusregister',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='modbusregister',
            name='device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registers', to='modbus.modbusdevice'),
        ),
        migrations.AddField(
            model_name='modbusdevice',
            name='device_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devices', to='modbus.devicemodel'),
        ),
        migrations.AddField(
            model_name='modbusregister',
            name='device_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='register_templates', to='modbus.devicemodel'),
        ),
        migrations.CreateModel(
            name='EnergyMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('voltage_l1_n', models.FloatField(blank=True, help_text='Voltage Phase 1-Neutral (V)', null=True)),
                ('voltage_l2_n', models.FloatField(blank=True, help_text='Voltage Phase 2-Neutral (V)', null=True)),
                ('voltage_l3_n', models.FloatField(blank=True, help_text='Voltage Phase 3-Neutral (V)', null=True)),
                ('voltage_l1_l2', models.FloatField(blank=True, help_text='Voltage Phase 1-2 (V)', null=True)),
                ('voltage_l2_l3', models.FloatField(blank=True, help_text='Voltage Phase 2-3 (V)', null=True)),
                ('voltage_l3_l1', models.FloatField(blank=True, help_text='Voltage Phase 3-1 (V)', null=True)),
                ('avg_voltage', models.FloatField(blank=True, help_text='Average Voltage (V)', null=True)),
                ('current_l1', models.FloatField(blank=True, help_text='Current Phase 1 (A)', null=True)),
                ('current_l2', models.FloatField(blank=True, help_text='Current Phase 2 (A)', null=True)),
                ('current_l3', models.FloatField(blank=True, help_text='Current Phase 3 (A)', null=True)),
                ('current_neutral', models.FloatField(blank=True, help_text='Neutral Current (A)', null=True)),
                ('avg_current', models.FloatField(blank=True, help_text='Average Current (A)', null=True)),
                ('active_power_total', models.FloatField(blank=True, help_text='Total Active Power (kW)', null=True)),
                ('active_power_l1', models.FloatField(blank=True, help_text='Active Power Phase 1 (kW)', null=True)),
                ('active_power_l2', models.FloatField(blank=True, help_text='Active Power Phase 2 (kW)', null=True)),
                ('active_power_l3', models.FloatField(blank=True, help_text='Active Power Phase 3 (kW)', null=True)),
                ('apparent_power_total', models.FloatField(blank=True, help_text='Total Apparent Power (kVA)', null=True)),
                ('reactive_power_total', models.FloatField(blank=True, help_text='Total Reactive Power (kVAR)', null=True)),
                ('energy_active', models.FloatField(blank=True, help_text='Active Energy (kWh)', null=True)),
                ('energy_reactive', models.FloatField(blank=True, help_text='Reactive Energy (kVARh)', null=True)),
                ('frequency', models.FloatField(blank=True, help_text='Frequency (Hz)', null=True)),
                ('power_factor_total', models.FloatField(blank=True, help_text='Total Power Factor', null=True)),
                ('power_factor_l1', models.FloatField(blank=True, help_text='Power Factor Phase 1', null=True)),
                ('power_factor_l2', models.FloatField(blank=True, help_text='Power Factor Phase 2', null=True)),
                ('power_factor_l3', models.FloatField(blank=True, help_text='Power Factor Phase 3', null=True)),
                ('thd_voltage_l1', models.FloatField(blank=True, help_text='THD Voltage L1 (%)', null=True)),
                ('thd_voltage_l2', models.FloatField(blank=True, help_text='THD Voltage L2 (%)', null=True)),
                ('thd_voltage_l3', models.FloatField(blank=True, help_text='THD Voltage L3 (%)', null=True)),
                ('thd_current_l1', models.FloatField(blank=True, help_text='THD Current L1 (%)', null=True)),
                ('thd_current_l2', models.FloatField(blank=True, help_text='THD Current L2 (%)', null=True)),
                ('thd_current_l3', models.FloatField(blank=True, help_text='THD Current L3 (%)', null=True)),
                ('demand', models.FloatField(blank=True, help_text='Current Demand (kW)', null=True)),
                ('max_demand', models.FloatField(blank=True, help_text='Maximum Demand (kW)', null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='modbus.modbusdevice')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['device', 'timestamp'], name='modbus_ener_device__7ebdd5_idx'), models.Index(fields=['timestamp'], name='modbus_ener_timesta_adddc7_idx')],
            },
        ),
        migrations.CreateModel(
            name='DailyAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('avg_voltage', models.FloatField()),
                ('min_voltage', models.FloatField()),
                ('max_voltage', models.FloatField()),
                ('avg_current', models.FloatField()),
                ('max_current', models.FloatField()),
                ('total_energy', models.FloatField(help_text='Total energy consumed (kWh)')),
                ('avg_power', models.FloatField()),
                ('max_power', models.FloatField()),
                ('min_power', models.FloatField()),
                ('avg_frequency', models.FloatField()),
                ('avg_power_factor', models.FloatField()),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_aggregates', to='modbus.modbusdevice')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('device', 'date')},
            },
        ),
    ]
